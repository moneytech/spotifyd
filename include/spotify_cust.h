/*
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
#ifndef _SPOTIFY_CUST_H
#define _SPOTIFY_CUST_H

extern "C" {
	#include <libspotify/api.h>
	#include "audio.h"
}


//nice per session wrapper class
class SpotifySession {
public:
  SpotifySession();
  ~SpotifySession();
  sp_session * getSession(void){
    return m_sess;
  };
  int getPlaybackDone(void){
    return m_playback_done;
  };
  int setPlaybackDone(int done){
    m_playback_done = done;
  };
  sp_playlist * getActivePlaylist(void){
    return m_jukeboxlist;
  };
  sp_track * getCurrentTrack(){
    return m_currenttrack;
  };
  int getCurrentTrackIdx(){
    return m_track_idx;
  };

  sp_track * setCurrentTrack(int idx);
  sp_playlistcontainer * getPlaylistContainer(void);
  void setActivePlaylist(sp_playlist * pl);
  std::string getPlaylistName(void);
#if 0
  void selectPlaylist(const SpotifyCredential& cred, const std::string& playlist);
#endif
private:
  sp_session *m_sess;
  int m_notify_do;
  int m_playback_done;
  sp_playlist *m_jukeboxlist;
  int m_remove_tracks;
  sp_track *m_currenttrack;
  int m_track_idx;

};

#endif
